
import { ScrollView , ListView, LineEdit, Button} from "std-widgets.slint";


export struct PlaylistData {
    name: string,
    size: int,
    image: image
}


component PlaylistResult inherits Rectangle {
    height: 64px;
    in property <string> name <=> title.text;
    in property <int> size;
    in property <image> image <=> img.source;
    in property <int> index;

    Rectangle { 

        padding: 2px;
        inner := Rectangle {
            height: 60px;
            border-radius: 6px;
            background: #1A1A1A;
            touch := TouchArea {
                HorizontalLayout {
                    padding: 5px;
                    padding-right: 10px;
                    Rectangle {
                        width: 50px;
                        height: 50px;
                        img := Image {
                            width: 50px;
                            height: 50px;
                            image-rendering: pixelated;
                        }
                        border-radius: 5px;
                        clip: true;
                        border-color: #ffffff;
                    }
                    Rectangle {
                        
                        HorizontalLayout {
                        alignment: space-between;
                        VerticalLayout {
                            alignment: start;
                            padding-top: 5px;
                            padding-left: 10px;
                            spacing: 2px;
                            title := Text {
                                font-size: 18px;
                                color: #fff;
                                overflow: elide;
                            }
                            sub_text := Text {
                                font-size: 12px;
                                text: size;
                                color: #585858;
                                overflow: elide;
                            }

                        }
                        
                        //add a delete playlist button with confirmation

                        }

                    }

            }
        }

        }
    }
}

export component Playlists inherits Rectangle {
    background: #0E0E0E;
    min-width: 460px;

    property <bool> making-new-playlist;

    in property <[PlaylistData]> playlists <=> PlaylistsScreen.playlists;

    VerticalLayout {
        alignment: start;
        height: 100%;
        Rectangle {
            height: 15px;
        }   
        ListView {
            height: 100%;
            for result[i] in playlists : PlaylistResult {
                name: result.name;
                size: result.size;
                image: result.image;
                index: i;
            }
        }
    }


    //new playlist button
    Rectangle {
        background: #00000000;
        x: parent.width - self.width - 25px;
        y: parent.height - self.height - 25px;
        width: 35px;
        height: 35px;
        TouchArea {
            Image {
                source: @image-url("../img/plus.svg");
                width: 35px;
                height: 35px;
            }
            clicked => {
                making-new-playlist = !making-new-playlist;
            }
        }
    }

    if (making-new-playlist) : Rectangle {
        Rectangle {
            height:100%;
            width: 100%; 
            background: #5b5b5b; 
            Rectangle {
                width: 80%;
                VerticalLayout {
                    spacing: 5px;
                    Rectangle {
                        height: 25px;
                        Text {
                            text: "New Playlist";
                            horizontal-alignment: center;
                            vertical-alignment: center;
                            font-size: 12px;
                        }
                    }
                    name := LineEdit {
                        height: 20px;
                        placeholder-text: "name";
                    }
                    Rectangle {
                        height: 20px;
                        HorizontalLayout {
                            spacing: 10px;
                            Rectangle {
                                background: ok-touch.has-hover ? #8b8b8b : #5b5b5b;
                                border-color: #8b8b8b;
                                border-radius: 5px;
                                border-width: 1px;
                                height: 20px;
                                ok_touch := TouchArea {
                                    Text {
                                        text: "ok";
                                        horizontal-alignment: center;
                                    }
                                    clicked => {
                                        PlaylistsScreen.new-playlist(name.text);
                                        making-new-playlist = false;
                                    }
                                }
                            }
                            Rectangle {
                                background: cancel-touch.has-hover ? #8b8b8b : #5b5b5b;
                                border-color: #8b8b8b;
                                border-radius: 5px;
                                border-width: 1px;
                                height: 20px;
                                width: 50%;
                                cancel_touch := TouchArea {
                                    Text {
                                        text: "cancel";
                                        horizontal-alignment: center;
                                    }
                                    clicked => {
                                        making-new-playlist = false;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        x: (root.width / 2) - (self.width / 2);
        y: (root.height / 2) - (self.height / 2);
        height: 80px;
        width: 300px;
    }
    

}

export global PlaylistsScreen {
    in-out property <[PlaylistData]> playlists;
    callback new_playlist(string);
}